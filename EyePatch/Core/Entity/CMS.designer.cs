#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EyePatch.Core.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EyePatch")]
	public partial class EyePatchDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFolder(Folder instance);
    partial void UpdateFolder(Folder instance);
    partial void DeleteFolder(Folder instance);
    partial void InsertWidgetInstance(WidgetInstance instance);
    partial void UpdateWidgetInstance(WidgetInstance instance);
    partial void DeleteWidgetInstance(WidgetInstance instance);
    partial void InsertWidget(Widget instance);
    partial void UpdateWidget(Widget instance);
    partial void DeleteWidget(Widget instance);
    partial void InsertContentArea(ContentArea instance);
    partial void UpdateContentArea(ContentArea instance);
    partial void DeleteContentArea(ContentArea instance);
    partial void InsertSite(Site instance);
    partial void UpdateSite(Site instance);
    partial void DeleteSite(Site instance);
    partial void InsertPlugin(Plugin instance);
    partial void UpdatePlugin(Plugin instance);
    partial void DeletePlugin(Plugin instance);
    partial void InsertTemplate(Template instance);
    partial void UpdateTemplate(Template instance);
    partial void DeleteTemplate(Template instance);
    partial void InsertMediaFile(MediaFile instance);
    partial void UpdateMediaFile(MediaFile instance);
    partial void DeleteMediaFile(MediaFile instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    #endregion
		
		public EyePatchDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EyePatchConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EyePatchDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EyePatchDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EyePatchDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EyePatchDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Folder> Folders
		{
			get
			{
				return this.GetTable<Folder>();
			}
		}
		
		public System.Data.Linq.Table<WidgetInstance> WidgetInstances
		{
			get
			{
				return this.GetTable<WidgetInstance>();
			}
		}
		
		public System.Data.Linq.Table<Widget> Widgets
		{
			get
			{
				return this.GetTable<Widget>();
			}
		}
		
		public System.Data.Linq.Table<ContentArea> ContentAreas
		{
			get
			{
				return this.GetTable<ContentArea>();
			}
		}
		
		public System.Data.Linq.Table<Site> Sites
		{
			get
			{
				return this.GetTable<Site>();
			}
		}
		
		public System.Data.Linq.Table<Plugin> Plugins
		{
			get
			{
				return this.GetTable<Plugin>();
			}
		}
		
		public System.Data.Linq.Table<Template> Templates
		{
			get
			{
				return this.GetTable<Template>();
			}
		}
		
		public System.Data.Linq.Table<MediaFile> MediaFiles
		{
			get
			{
				return this.GetTable<MediaFile>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Folder")]
	public partial class Folder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private EntitySet<Folder> _Folders;
		
		private EntitySet<Page> _Pages;
		
		private EntityRef<Folder> _Parent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    #endregion
		
		public Folder()
		{
			this._Folders = new EntitySet<Folder>(new Action<Folder>(this.attach_Folders), new Action<Folder>(this.detach_Folders));
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			this._Parent = default(EntityRef<Folder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Folder", Storage="_Folders", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Folder> Folders
		{
			get
			{
				return this._Folders;
			}
			set
			{
				this._Folders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Page", Storage="_Pages", ThisKey="ID", OtherKey="FolderID")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Folder", Storage="_Parent", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Folder Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				Folder previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.Folders.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.Folders.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Folders(Folder entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Folders(Folder entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Folder = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Folder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WidgetInstance")]
	public partial class WidgetInstance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _WidgetID;
		
		private int _ContentAreaID;
		
		private string _Contents;
		
		private int _Position;
		
		private EntityRef<Widget> _Widget;
		
		private EntityRef<ContentArea> _ContentArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWidgetIDChanging(int value);
    partial void OnWidgetIDChanged();
    partial void OnContentAreaIDChanging(int value);
    partial void OnContentAreaIDChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    #endregion
		
		public WidgetInstance()
		{
			this._Widget = default(EntityRef<Widget>);
			this._ContentArea = default(EntityRef<ContentArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidgetID", DbType="Int NOT NULL")]
		public int WidgetID
		{
			get
			{
				return this._WidgetID;
			}
			set
			{
				if ((this._WidgetID != value))
				{
					if (this._Widget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWidgetIDChanging(value);
					this.SendPropertyChanging();
					this._WidgetID = value;
					this.SendPropertyChanged("WidgetID");
					this.OnWidgetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentAreaID", DbType="Int NOT NULL")]
		public int ContentAreaID
		{
			get
			{
				return this._ContentAreaID;
			}
			set
			{
				if ((this._ContentAreaID != value))
				{
					if (this._ContentArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentAreaIDChanging(value);
					this.SendPropertyChanging();
					this._ContentAreaID = value;
					this.SendPropertyChanged("ContentAreaID");
					this.OnContentAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Widget_WidgetInstance", Storage="_Widget", ThisKey="WidgetID", OtherKey="ID", IsForeignKey=true)]
		public Widget Widget
		{
			get
			{
				return this._Widget.Entity;
			}
			set
			{
				Widget previousValue = this._Widget.Entity;
				if (((previousValue != value) 
							|| (this._Widget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Widget.Entity = null;
						previousValue.WidgetInstances.Remove(this);
					}
					this._Widget.Entity = value;
					if ((value != null))
					{
						value.WidgetInstances.Add(this);
						this._WidgetID = value.ID;
					}
					else
					{
						this._WidgetID = default(int);
					}
					this.SendPropertyChanged("Widget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentArea_WidgetInstance", Storage="_ContentArea", ThisKey="ContentAreaID", OtherKey="ID", IsForeignKey=true)]
		public ContentArea ContentArea
		{
			get
			{
				return this._ContentArea.Entity;
			}
			set
			{
				ContentArea previousValue = this._ContentArea.Entity;
				if (((previousValue != value) 
							|| (this._ContentArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentArea.Entity = null;
						previousValue.WidgetInstances.Remove(this);
					}
					this._ContentArea.Entity = value;
					if ((value != null))
					{
						value.WidgetInstances.Add(this);
						this._ContentAreaID = value.ID;
					}
					else
					{
						this._ContentAreaID = default(int);
					}
					this.SendPropertyChanged("ContentArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Widget")]
	public partial class Widget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Type;
		
		private int _GroupID;
		
		private EntitySet<WidgetInstance> _WidgetInstances;
		
		private EntityRef<Plugin> _Plugin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    #endregion
		
		public Widget()
		{
			this._WidgetInstances = new EntitySet<WidgetInstance>(new Action<WidgetInstance>(this.attach_WidgetInstances), new Action<WidgetInstance>(this.detach_WidgetInstances));
			this._Plugin = default(EntityRef<Plugin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._Plugin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Widget_WidgetInstance", Storage="_WidgetInstances", ThisKey="ID", OtherKey="WidgetID")]
		public EntitySet<WidgetInstance> WidgetInstances
		{
			get
			{
				return this._WidgetInstances;
			}
			set
			{
				this._WidgetInstances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plugin_Widget", Storage="_Plugin", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public Plugin Plugin
		{
			get
			{
				return this._Plugin.Entity;
			}
			set
			{
				Plugin previousValue = this._Plugin.Entity;
				if (((previousValue != value) 
							|| (this._Plugin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plugin.Entity = null;
						previousValue.Widgets.Remove(this);
					}
					this._Plugin.Entity = value;
					if ((value != null))
					{
						value.Widgets.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("Plugin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WidgetInstances(WidgetInstance entity)
		{
			this.SendPropertyChanging();
			entity.Widget = this;
		}
		
		private void detach_WidgetInstances(WidgetInstance entity)
		{
			this.SendPropertyChanging();
			entity.Widget = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentArea")]
	public partial class ContentArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PageID;
		
		private string _Name;
		
		private EntitySet<WidgetInstance> _WidgetInstances;
		
		private EntityRef<Page> _Page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ContentArea()
		{
			this._WidgetInstances = new EntitySet<WidgetInstance>(new Action<WidgetInstance>(this.attach_WidgetInstances), new Action<WidgetInstance>(this.detach_WidgetInstances));
			this._Page = default(EntityRef<Page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NOT NULL")]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentArea_WidgetInstance", Storage="_WidgetInstances", ThisKey="ID", OtherKey="ContentAreaID")]
		public EntitySet<WidgetInstance> WidgetInstances
		{
			get
			{
				return this._WidgetInstances;
			}
			set
			{
				this._WidgetInstances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_ContentArea", Storage="_Page", ThisKey="PageID", OtherKey="ID", IsForeignKey=true)]
		public Page Page
		{
			get
			{
				return this._Page.Entity;
			}
			set
			{
				Page previousValue = this._Page.Entity;
				if (((previousValue != value) 
							|| (this._Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page.Entity = null;
						previousValue.ContentAreas.Remove(this);
					}
					this._Page.Entity = value;
					if ((value != null))
					{
						value.ContentAreas.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(int);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WidgetInstances(WidgetInstance entity)
		{
			this.SendPropertyChanging();
			entity.ContentArea = this;
		}
		
		private void detach_WidgetInstances(WidgetInstance entity)
		{
			this.SendPropertyChanging();
			entity.ContentArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Site")]
	public partial class Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Site()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Plugin")]
	public partial class Plugin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _FullName;
		
		private System.DateTime _Created;
		
		private string _Author;
		
		private EntitySet<Widget> _Widgets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    #endregion
		
		public Plugin()
		{
			this._Widgets = new EntitySet<Widget>(new Action<Widget>(this.attach_Widgets), new Action<Widget>(this.detach_Widgets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime2 NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plugin_Widget", Storage="_Widgets", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<Widget> Widgets
		{
			get
			{
				return this._Widgets;
			}
			set
			{
				this._Widgets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Widgets(Widget entity)
		{
			this.SendPropertyChanging();
			entity.Plugin = this;
		}
		
		private void detach_Widgets(Widget entity)
		{
			this.SendPropertyChanging();
			entity.Plugin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Template")]
	public partial class Template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _ViewPath;
		
		private string _Controller;
		
		private string _Action;
		
		private bool _IsDefault;
		
		private string _AnalyticsKey;
		
		private System.Nullable<int> _Language;
		
		private string _Author;
		
		private string _Charset;
		
		private string _Copyright;
		
		private string _Description;
		
		private string _Keywords;
		
		private string _Robots;
		
		private string _OgType;
		
		private string _OgEmail;
		
		private string _OgPhone;
		
		private string _OgImage;
		
		private System.Nullable<double> _OgLongitude;
		
		private System.Nullable<double> _OgLatitude;
		
		private string _OgStreetAddress;
		
		private string _OgLocality;
		
		private string _OgRegion;
		
		private string _OgCountry;
		
		private string _OgPostcode;
		
		private EntitySet<Page> _Pages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnViewPathChanging(string value);
    partial void OnViewPathChanged();
    partial void OnControllerChanging(string value);
    partial void OnControllerChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnAnalyticsKeyChanging(string value);
    partial void OnAnalyticsKeyChanged();
    partial void OnLanguageChanging(System.Nullable<int> value);
    partial void OnLanguageChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnCharsetChanging(string value);
    partial void OnCharsetChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnRobotsChanging(string value);
    partial void OnRobotsChanged();
    partial void OnOgTypeChanging(string value);
    partial void OnOgTypeChanged();
    partial void OnOgEmailChanging(string value);
    partial void OnOgEmailChanged();
    partial void OnOgPhoneChanging(string value);
    partial void OnOgPhoneChanged();
    partial void OnOgImageChanging(string value);
    partial void OnOgImageChanged();
    partial void OnOgLongitudeChanging(System.Nullable<double> value);
    partial void OnOgLongitudeChanged();
    partial void OnOgLatitudeChanging(System.Nullable<double> value);
    partial void OnOgLatitudeChanged();
    partial void OnOgStreetAddressChanging(string value);
    partial void OnOgStreetAddressChanged();
    partial void OnOgLocalityChanging(string value);
    partial void OnOgLocalityChanged();
    partial void OnOgRegionChanging(string value);
    partial void OnOgRegionChanged();
    partial void OnOgCountryChanging(string value);
    partial void OnOgCountryChanged();
    partial void OnOgPostcodeChanging(string value);
    partial void OnOgPostcodeChanged();
    #endregion
		
		public Template()
		{
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewPath", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ViewPath
		{
			get
			{
				return this._ViewPath;
			}
			set
			{
				if ((this._ViewPath != value))
				{
					this.OnViewPathChanging(value);
					this.SendPropertyChanging();
					this._ViewPath = value;
					this.SendPropertyChanged("ViewPath");
					this.OnViewPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Controller", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Controller
		{
			get
			{
				return this._Controller;
			}
			set
			{
				if ((this._Controller != value))
				{
					this.OnControllerChanging(value);
					this.SendPropertyChanging();
					this._Controller = value;
					this.SendPropertyChanged("Controller");
					this.OnControllerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalyticsKey", DbType="NVarChar(50)")]
		public string AnalyticsKey
		{
			get
			{
				return this._AnalyticsKey;
			}
			set
			{
				if ((this._AnalyticsKey != value))
				{
					this.OnAnalyticsKeyChanging(value);
					this.SendPropertyChanging();
					this._AnalyticsKey = value;
					this.SendPropertyChanged("AnalyticsKey");
					this.OnAnalyticsKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Int")]
		public System.Nullable<int> Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(50)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Charset", DbType="NVarChar(13)")]
		public string Charset
		{
			get
			{
				return this._Charset;
			}
			set
			{
				if ((this._Charset != value))
				{
					this.OnCharsetChanging(value);
					this.SendPropertyChanging();
					this._Charset = value;
					this.SendPropertyChanged("Charset");
					this.OnCharsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copyright", DbType="NVarChar(50)")]
		public string Copyright
		{
			get
			{
				return this._Copyright;
			}
			set
			{
				if ((this._Copyright != value))
				{
					this.OnCopyrightChanging(value);
					this.SendPropertyChanging();
					this._Copyright = value;
					this.SendPropertyChanged("Copyright");
					this.OnCopyrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(155)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(874)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Robots", DbType="NVarChar(20)")]
		public string Robots
		{
			get
			{
				return this._Robots;
			}
			set
			{
				if ((this._Robots != value))
				{
					this.OnRobotsChanging(value);
					this.SendPropertyChanging();
					this._Robots = value;
					this.SendPropertyChanged("Robots");
					this.OnRobotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgType", DbType="NVarChar(50)")]
		public string OgType
		{
			get
			{
				return this._OgType;
			}
			set
			{
				if ((this._OgType != value))
				{
					this.OnOgTypeChanging(value);
					this.SendPropertyChanging();
					this._OgType = value;
					this.SendPropertyChanged("OgType");
					this.OnOgTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgEmail", DbType="NVarChar(50)")]
		public string OgEmail
		{
			get
			{
				return this._OgEmail;
			}
			set
			{
				if ((this._OgEmail != value))
				{
					this.OnOgEmailChanging(value);
					this.SendPropertyChanging();
					this._OgEmail = value;
					this.SendPropertyChanged("OgEmail");
					this.OnOgEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgPhone", DbType="NVarChar(25)")]
		public string OgPhone
		{
			get
			{
				return this._OgPhone;
			}
			set
			{
				if ((this._OgPhone != value))
				{
					this.OnOgPhoneChanging(value);
					this.SendPropertyChanging();
					this._OgPhone = value;
					this.SendPropertyChanged("OgPhone");
					this.OnOgPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgImage", DbType="NVarChar(MAX)")]
		public string OgImage
		{
			get
			{
				return this._OgImage;
			}
			set
			{
				if ((this._OgImage != value))
				{
					this.OnOgImageChanging(value);
					this.SendPropertyChanging();
					this._OgImage = value;
					this.SendPropertyChanged("OgImage");
					this.OnOgImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgLongitude", DbType="Float")]
		public System.Nullable<double> OgLongitude
		{
			get
			{
				return this._OgLongitude;
			}
			set
			{
				if ((this._OgLongitude != value))
				{
					this.OnOgLongitudeChanging(value);
					this.SendPropertyChanging();
					this._OgLongitude = value;
					this.SendPropertyChanged("OgLongitude");
					this.OnOgLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgLatitude", DbType="Float")]
		public System.Nullable<double> OgLatitude
		{
			get
			{
				return this._OgLatitude;
			}
			set
			{
				if ((this._OgLatitude != value))
				{
					this.OnOgLatitudeChanging(value);
					this.SendPropertyChanging();
					this._OgLatitude = value;
					this.SendPropertyChanged("OgLatitude");
					this.OnOgLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgStreetAddress", DbType="NVarChar(MAX)")]
		public string OgStreetAddress
		{
			get
			{
				return this._OgStreetAddress;
			}
			set
			{
				if ((this._OgStreetAddress != value))
				{
					this.OnOgStreetAddressChanging(value);
					this.SendPropertyChanging();
					this._OgStreetAddress = value;
					this.SendPropertyChanged("OgStreetAddress");
					this.OnOgStreetAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgLocality", DbType="NVarChar(50)")]
		public string OgLocality
		{
			get
			{
				return this._OgLocality;
			}
			set
			{
				if ((this._OgLocality != value))
				{
					this.OnOgLocalityChanging(value);
					this.SendPropertyChanging();
					this._OgLocality = value;
					this.SendPropertyChanged("OgLocality");
					this.OnOgLocalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgRegion", DbType="NVarChar(50)")]
		public string OgRegion
		{
			get
			{
				return this._OgRegion;
			}
			set
			{
				if ((this._OgRegion != value))
				{
					this.OnOgRegionChanging(value);
					this.SendPropertyChanging();
					this._OgRegion = value;
					this.SendPropertyChanged("OgRegion");
					this.OnOgRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgCountry", DbType="NVarChar(50)")]
		public string OgCountry
		{
			get
			{
				return this._OgCountry;
			}
			set
			{
				if ((this._OgCountry != value))
				{
					this.OnOgCountryChanging(value);
					this.SendPropertyChanging();
					this._OgCountry = value;
					this.SendPropertyChanged("OgCountry");
					this.OnOgCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgPostcode", DbType="NVarChar(50)")]
		public string OgPostcode
		{
			get
			{
				return this._OgPostcode;
			}
			set
			{
				if ((this._OgPostcode != value))
				{
					this.OnOgPostcodeChanging(value);
					this.SendPropertyChanging();
					this._OgPostcode = value;
					this.SendPropertyChanged("OgPostcode");
					this.OnOgPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Template_Page", Storage="_Pages", ThisKey="ID", OtherKey="TemplateID")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Template = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Template = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaFiles")]
	public partial class MediaFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Url;
		
		private string _AltText;
		
		private string _Title;
		
		private System.DateTime _Created;
		
		private System.Nullable<System.DateTime> _LastModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnAltTextChanging(string value);
    partial void OnAltTextChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    #endregion
		
		public MediaFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltText", DbType="NVarChar(MAX)")]
		public string AltText
		{
			get
			{
				return this._AltText;
			}
			set
			{
				if ((this._AltText != value))
				{
					this.OnAltTextChanging(value);
					this.SendPropertyChanging();
					this._AltText = value;
					this.SendPropertyChanged("AltText");
					this.OnAltTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime2 NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Page")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Title;
		
		private string _Url;
		
		private System.Nullable<EyePatch.Core.Mvc.Sitemap.ChangeFrequency> _ChangeFrequency;
		
		private System.Nullable<double> _Priority;
		
		private System.DateTime _Created;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private int _TemplateID;
		
		private System.Nullable<int> _FolderID;
		
		private int _MenuOrder;
		
		private bool _IsLive;
		
		private bool _IsInMenu;
		
		private bool _IsHidden;
		
		private bool _IsDynamic;
		
		private System.Nullable<int> _Language;
		
		private string _Author;
		
		private string _Charset;
		
		private string _Copyright;
		
		private string _Description;
		
		private string _Keywords;
		
		private string _Robots;
		
		private string _OgType;
		
		private string _OgEmail;
		
		private string _OgPhone;
		
		private string _OgImage;
		
		private System.Nullable<double> _OgLongitude;
		
		private System.Nullable<double> _OgLatitude;
		
		private string _OgStreetAddress;
		
		private string _OgLocality;
		
		private string _OgRegion;
		
		private string _OgCountry;
		
		private string _OgPostcode;
		
		private EntitySet<ContentArea> _ContentAreas;
		
		private EntityRef<Folder> _Folder;
		
		private EntityRef<Template> _Template;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnChangeFrequencyChanging(System.Nullable<EyePatch.Core.Mvc.Sitemap.ChangeFrequency> value);
    partial void OnChangeFrequencyChanged();
    partial void OnPriorityChanging(System.Nullable<double> value);
    partial void OnPriorityChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    partial void OnTemplateIDChanging(int value);
    partial void OnTemplateIDChanged();
    partial void OnFolderIDChanging(System.Nullable<int> value);
    partial void OnFolderIDChanged();
    partial void OnMenuOrderChanging(int value);
    partial void OnMenuOrderChanged();
    partial void OnIsLiveChanging(bool value);
    partial void OnIsLiveChanged();
    partial void OnIsInMenuChanging(bool value);
    partial void OnIsInMenuChanged();
    partial void OnIsHiddenChanging(bool value);
    partial void OnIsHiddenChanged();
    partial void OnIsDynamicChanging(bool value);
    partial void OnIsDynamicChanged();
    partial void OnLanguageChanging(System.Nullable<int> value);
    partial void OnLanguageChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnCharsetChanging(string value);
    partial void OnCharsetChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnRobotsChanging(string value);
    partial void OnRobotsChanged();
    partial void OnOgTypeChanging(string value);
    partial void OnOgTypeChanged();
    partial void OnOgEmailChanging(string value);
    partial void OnOgEmailChanged();
    partial void OnOgPhoneChanging(string value);
    partial void OnOgPhoneChanged();
    partial void OnOgImageChanging(string value);
    partial void OnOgImageChanged();
    partial void OnOgLongitudeChanging(System.Nullable<double> value);
    partial void OnOgLongitudeChanged();
    partial void OnOgLatitudeChanging(System.Nullable<double> value);
    partial void OnOgLatitudeChanged();
    partial void OnOgStreetAddressChanging(string value);
    partial void OnOgStreetAddressChanged();
    partial void OnOgLocalityChanging(string value);
    partial void OnOgLocalityChanged();
    partial void OnOgRegionChanging(string value);
    partial void OnOgRegionChanged();
    partial void OnOgCountryChanging(string value);
    partial void OnOgCountryChanged();
    partial void OnOgPostcodeChanging(string value);
    partial void OnOgPostcodeChanged();
    #endregion
		
		public Page()
		{
			this._ContentAreas = new EntitySet<ContentArea>(new Action<ContentArea>(this.attach_ContentAreas), new Action<ContentArea>(this.detach_ContentAreas));
			this._Folder = default(EntityRef<Folder>);
			this._Template = default(EntityRef<Template>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(MAX)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeFrequency", DbType="Int", CanBeNull=true)]
		public System.Nullable<EyePatch.Core.Mvc.Sitemap.ChangeFrequency> ChangeFrequency
		{
			get
			{
				return this._ChangeFrequency;
			}
			set
			{
				if ((this._ChangeFrequency != value))
				{
					this.OnChangeFrequencyChanging(value);
					this.SendPropertyChanging();
					this._ChangeFrequency = value;
					this.SendPropertyChanged("ChangeFrequency");
					this.OnChangeFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Float")]
		public System.Nullable<double> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime2 NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateID", DbType="Int NOT NULL")]
		public int TemplateID
		{
			get
			{
				return this._TemplateID;
			}
			set
			{
				if ((this._TemplateID != value))
				{
					if (this._Template.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._TemplateID = value;
					this.SendPropertyChanged("TemplateID");
					this.OnTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderID", DbType="Int")]
		public System.Nullable<int> FolderID
		{
			get
			{
				return this._FolderID;
			}
			set
			{
				if ((this._FolderID != value))
				{
					if (this._Folder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFolderIDChanging(value);
					this.SendPropertyChanging();
					this._FolderID = value;
					this.SendPropertyChanged("FolderID");
					this.OnFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuOrder", DbType="Int NOT NULL")]
		public int MenuOrder
		{
			get
			{
				return this._MenuOrder;
			}
			set
			{
				if ((this._MenuOrder != value))
				{
					this.OnMenuOrderChanging(value);
					this.SendPropertyChanging();
					this._MenuOrder = value;
					this.SendPropertyChanged("MenuOrder");
					this.OnMenuOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLive", DbType="Bit NOT NULL")]
		public bool IsLive
		{
			get
			{
				return this._IsLive;
			}
			set
			{
				if ((this._IsLive != value))
				{
					this.OnIsLiveChanging(value);
					this.SendPropertyChanging();
					this._IsLive = value;
					this.SendPropertyChanged("IsLive");
					this.OnIsLiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInMenu", DbType="Bit NOT NULL")]
		public bool IsInMenu
		{
			get
			{
				return this._IsInMenu;
			}
			set
			{
				if ((this._IsInMenu != value))
				{
					this.OnIsInMenuChanging(value);
					this.SendPropertyChanging();
					this._IsInMenu = value;
					this.SendPropertyChanged("IsInMenu");
					this.OnIsInMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit NOT NULL")]
		public bool IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDynamic", DbType="Bit NOT NULL")]
		public bool IsDynamic
		{
			get
			{
				return this._IsDynamic;
			}
			set
			{
				if ((this._IsDynamic != value))
				{
					this.OnIsDynamicChanging(value);
					this.SendPropertyChanging();
					this._IsDynamic = value;
					this.SendPropertyChanged("IsDynamic");
					this.OnIsDynamicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Int")]
		public System.Nullable<int> Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(50)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Charset", DbType="NVarChar(13)")]
		public string Charset
		{
			get
			{
				return this._Charset;
			}
			set
			{
				if ((this._Charset != value))
				{
					this.OnCharsetChanging(value);
					this.SendPropertyChanging();
					this._Charset = value;
					this.SendPropertyChanged("Charset");
					this.OnCharsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copyright", DbType="NVarChar(50)")]
		public string Copyright
		{
			get
			{
				return this._Copyright;
			}
			set
			{
				if ((this._Copyright != value))
				{
					this.OnCopyrightChanging(value);
					this.SendPropertyChanging();
					this._Copyright = value;
					this.SendPropertyChanged("Copyright");
					this.OnCopyrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(155)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(874)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Robots", DbType="NVarChar(20)")]
		public string Robots
		{
			get
			{
				return this._Robots;
			}
			set
			{
				if ((this._Robots != value))
				{
					this.OnRobotsChanging(value);
					this.SendPropertyChanging();
					this._Robots = value;
					this.SendPropertyChanged("Robots");
					this.OnRobotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgType", DbType="NVarChar(50)")]
		public string OgType
		{
			get
			{
				return this._OgType;
			}
			set
			{
				if ((this._OgType != value))
				{
					this.OnOgTypeChanging(value);
					this.SendPropertyChanging();
					this._OgType = value;
					this.SendPropertyChanged("OgType");
					this.OnOgTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgEmail", DbType="NVarChar(50)")]
		public string OgEmail
		{
			get
			{
				return this._OgEmail;
			}
			set
			{
				if ((this._OgEmail != value))
				{
					this.OnOgEmailChanging(value);
					this.SendPropertyChanging();
					this._OgEmail = value;
					this.SendPropertyChanged("OgEmail");
					this.OnOgEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgPhone", DbType="NVarChar(25)")]
		public string OgPhone
		{
			get
			{
				return this._OgPhone;
			}
			set
			{
				if ((this._OgPhone != value))
				{
					this.OnOgPhoneChanging(value);
					this.SendPropertyChanging();
					this._OgPhone = value;
					this.SendPropertyChanged("OgPhone");
					this.OnOgPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgImage", DbType="NVarChar(MAX)")]
		public string OgImage
		{
			get
			{
				return this._OgImage;
			}
			set
			{
				if ((this._OgImage != value))
				{
					this.OnOgImageChanging(value);
					this.SendPropertyChanging();
					this._OgImage = value;
					this.SendPropertyChanged("OgImage");
					this.OnOgImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgLongitude", DbType="Float")]
		public System.Nullable<double> OgLongitude
		{
			get
			{
				return this._OgLongitude;
			}
			set
			{
				if ((this._OgLongitude != value))
				{
					this.OnOgLongitudeChanging(value);
					this.SendPropertyChanging();
					this._OgLongitude = value;
					this.SendPropertyChanged("OgLongitude");
					this.OnOgLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgLatitude", DbType="Float")]
		public System.Nullable<double> OgLatitude
		{
			get
			{
				return this._OgLatitude;
			}
			set
			{
				if ((this._OgLatitude != value))
				{
					this.OnOgLatitudeChanging(value);
					this.SendPropertyChanging();
					this._OgLatitude = value;
					this.SendPropertyChanged("OgLatitude");
					this.OnOgLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgStreetAddress", DbType="NVarChar(MAX)")]
		public string OgStreetAddress
		{
			get
			{
				return this._OgStreetAddress;
			}
			set
			{
				if ((this._OgStreetAddress != value))
				{
					this.OnOgStreetAddressChanging(value);
					this.SendPropertyChanging();
					this._OgStreetAddress = value;
					this.SendPropertyChanged("OgStreetAddress");
					this.OnOgStreetAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgLocality", DbType="NVarChar(50)")]
		public string OgLocality
		{
			get
			{
				return this._OgLocality;
			}
			set
			{
				if ((this._OgLocality != value))
				{
					this.OnOgLocalityChanging(value);
					this.SendPropertyChanging();
					this._OgLocality = value;
					this.SendPropertyChanged("OgLocality");
					this.OnOgLocalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgRegion", DbType="NVarChar(50)")]
		public string OgRegion
		{
			get
			{
				return this._OgRegion;
			}
			set
			{
				if ((this._OgRegion != value))
				{
					this.OnOgRegionChanging(value);
					this.SendPropertyChanging();
					this._OgRegion = value;
					this.SendPropertyChanged("OgRegion");
					this.OnOgRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgCountry", DbType="NVarChar(50)")]
		public string OgCountry
		{
			get
			{
				return this._OgCountry;
			}
			set
			{
				if ((this._OgCountry != value))
				{
					this.OnOgCountryChanging(value);
					this.SendPropertyChanging();
					this._OgCountry = value;
					this.SendPropertyChanged("OgCountry");
					this.OnOgCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgPostcode", DbType="NVarChar(50)")]
		public string OgPostcode
		{
			get
			{
				return this._OgPostcode;
			}
			set
			{
				if ((this._OgPostcode != value))
				{
					this.OnOgPostcodeChanging(value);
					this.SendPropertyChanging();
					this._OgPostcode = value;
					this.SendPropertyChanged("OgPostcode");
					this.OnOgPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_ContentArea", Storage="_ContentAreas", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<ContentArea> ContentAreas
		{
			get
			{
				return this._ContentAreas;
			}
			set
			{
				this._ContentAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Page", Storage="_Folder", ThisKey="FolderID", OtherKey="ID", IsForeignKey=true)]
		public Folder Folder
		{
			get
			{
				return this._Folder.Entity;
			}
			set
			{
				Folder previousValue = this._Folder.Entity;
				if (((previousValue != value) 
							|| (this._Folder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Folder.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._Folder.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._FolderID = value.ID;
					}
					else
					{
						this._FolderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Folder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Template_Page", Storage="_Template", ThisKey="TemplateID", OtherKey="ID", IsForeignKey=true)]
		public Template Template
		{
			get
			{
				return this._Template.Entity;
			}
			set
			{
				Template previousValue = this._Template.Entity;
				if (((previousValue != value) 
							|| (this._Template.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Template.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._Template.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._TemplateID = value.ID;
					}
					else
					{
						this._TemplateID = default(int);
					}
					this.SendPropertyChanged("Template");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentAreas(ContentArea entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_ContentAreas(ContentArea entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
	}
}
#pragma warning restore 1591
